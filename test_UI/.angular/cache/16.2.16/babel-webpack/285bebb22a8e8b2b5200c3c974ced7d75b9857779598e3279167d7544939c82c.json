{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CrudService {\n  constructor(http) {\n    this.http = http;\n    this.isLoggedIn = new BehaviorSubject(false);\n    this.url = \"http://localhost:3000\";\n    let userData = localStorage.getItem('user');\n    if (userData) this.isLoggedIn.next(true);\n  }\n  getProducts(filters = {}) {\n    return this.http.get(`${this.url}/products`, {\n      params: filters\n    });\n  }\n  getCategories() {\n    return this.http.get(`${this.url}/categories`);\n  }\n  saveUser(body) {\n    return this.http.post(`${this.url}/add/user`, body);\n  }\n  loginUser(body) {\n    return this.http.post(`${this.url}/login`, body);\n  }\n  postProduct(formData) {\n    return this.http.post(`${this.url}/product`, formData);\n  }\n  postProductBulk(formData) {\n    return this.http.post(`${this.url}/products/bulk-upload`, formData);\n  }\n  static {\n    this.ɵfac = function CrudService_Factory(t) {\n      return new (t || CrudService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: CrudService,\n      factory: CrudService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["BehaviorSubject","CrudService","constructor","http","isLoggedIn","url","userData","localStorage","getItem","next","getProducts","filters","get","params","getCategories","saveUser","body","post","loginUser","postProduct","formData","postProductBulk","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\DELL\\Desktop\\AKshay\\assignment\\test_UI\\src\\app\\crud.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport { BehaviorSubject } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class CrudService {\n\n  isLoggedIn = new BehaviorSubject(false);\n  constructor(private http: HttpClient) {\n    let userData = localStorage.getItem('user');\n    if(userData) this.isLoggedIn.next(true);\n   }\n\n  private url = \"http://localhost:3000\"\n  getProducts(filters={}){\n    return this.http.get(`${this.url}/products`,{params:filters});\n  }\n  getCategories(){\n    return this.http.get(`${this.url}/categories`);\n  }\n  saveUser(body:any){\n    return this.http.post(`${this.url}/add/user`,body);\n  }\n  loginUser(body:any){\n    return this.http.post(`${this.url}/login`,body);\n  }\n\n  postProduct(formData:any){\n    return this.http.post(`${this.url}/product`,formData);\n  }\n  postProductBulk(formData:any){\n    return this.http.post(`${this.url}/products/bulk-upload`,formData);\n  }\n\n}\n"],"mappings":"AAEA,SAASA,eAAe,QAAQ,MAAM;;;AAItC,OAAM,MAAOC,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IADxB,KAAAC,UAAU,GAAG,IAAIJ,eAAe,CAAC,KAAK,CAAC;IAM/B,KAAAK,GAAG,GAAG,uBAAuB;IAJnC,IAAIC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC3C,IAAGF,QAAQ,EAAE,IAAI,CAACF,UAAU,CAACK,IAAI,CAAC,IAAI,CAAC;EACxC;EAGDC,WAAWA,CAACC,OAAO,GAAC,EAAE;IACpB,OAAO,IAAI,CAACR,IAAI,CAACS,GAAG,CAAC,GAAG,IAAI,CAACP,GAAG,WAAW,EAAC;MAACQ,MAAM,EAACF;IAAO,CAAC,CAAC;EAC/D;EACAG,aAAaA,CAAA;IACX,OAAO,IAAI,CAACX,IAAI,CAACS,GAAG,CAAC,GAAG,IAAI,CAACP,GAAG,aAAa,CAAC;EAChD;EACAU,QAAQA,CAACC,IAAQ;IACf,OAAO,IAAI,CAACb,IAAI,CAACc,IAAI,CAAC,GAAG,IAAI,CAACZ,GAAG,WAAW,EAACW,IAAI,CAAC;EACpD;EACAE,SAASA,CAACF,IAAQ;IAChB,OAAO,IAAI,CAACb,IAAI,CAACc,IAAI,CAAC,GAAG,IAAI,CAACZ,GAAG,QAAQ,EAACW,IAAI,CAAC;EACjD;EAEAG,WAAWA,CAACC,QAAY;IACtB,OAAO,IAAI,CAACjB,IAAI,CAACc,IAAI,CAAC,GAAG,IAAI,CAACZ,GAAG,UAAU,EAACe,QAAQ,CAAC;EACvD;EACAC,eAAeA,CAACD,QAAY;IAC1B,OAAO,IAAI,CAACjB,IAAI,CAACc,IAAI,CAAC,GAAG,IAAI,CAACZ,GAAG,uBAAuB,EAACe,QAAQ,CAAC;EACpE;;;uBA3BWnB,WAAW,EAAAqB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAXxB,WAAW;MAAAyB,OAAA,EAAXzB,WAAW,CAAA0B,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}