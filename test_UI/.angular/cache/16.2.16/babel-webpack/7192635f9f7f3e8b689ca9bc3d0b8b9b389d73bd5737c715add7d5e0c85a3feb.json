{"ast":null,"code":"import { FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../crud.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction LoginComponent_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Please Enter valid Details\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_span_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Please Enter valid Details\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class LoginComponent {\n  constructor(crudService, fb, router) {\n    this.crudService = crudService;\n    this.fb = fb;\n    this.router = router;\n    this.loginForm = FormGroup;\n  }\n  ngOnInit() {\n    this.initForm();\n    let userData = localStorage.getItem('user');\n    console.log(\"user\", userData);\n    if (userData) this.router.navigate(['products']);\n  }\n  initForm() {\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.email, Validators.required]],\n      password: ['', [Validators.required]]\n    });\n  }\n  onFormSubmit() {\n    console.log(this.loginForm.getRawValue());\n    this.crudService.loginUser({\n      ...this.loginForm.getRawValue()\n    }).subscribe(data => {\n      console.log(data);\n      if (data) {\n        localStorage.setItem('user', data.data);\n        this.crudService.isLoggedIn.next(true);\n        this.router.navigate(['products']);\n      }\n    });\n  }\n  static {\n    this.ɵfac = function LoginComponent_Factory(t) {\n      return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.CrudService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 19,\n      vars: 4,\n      consts: [[1, \"align_middle\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"row\", 2, \"margin-top\", \"20px\"], [1, \"col-sm-6\", \"align\"], [1, \"col-sm-6\"], [\"name\", \"email\", \"id\", \"email\", \"formControlName\", \"email\"], [4, \"ngIf\"], [1, \"row\"], [\"name\", \"password\", \"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\"], [1, \"align\"], [\"type\", \"submit\", 1, \"align\", 3, \"disabled\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_1_listener() {\n            return ctx.onFormSubmit();\n          });\n          i0.ɵɵelementStart(2, \"div\", 2)(3, \"div\", 3);\n          i0.ɵɵtext(4, \"Email:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"div\", 4);\n          i0.ɵɵelement(6, \"input\", 5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(7, LoginComponent_span_7_Template, 2, 0, \"span\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(8, \"br\");\n          i0.ɵɵelementStart(9, \"div\", 7)(10, \"div\", 3);\n          i0.ɵɵtext(11, \"Password:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"div\", 4);\n          i0.ɵɵelement(13, \"input\", 8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(14, LoginComponent_span_14_Template, 2, 0, \"span\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(15, \"br\");\n          i0.ɵɵelementStart(16, \"div\", 9)(17, \"button\", 10);\n          i0.ɵɵtext(18, \"Login\");\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngIf\", ctx.loginForm.get(\"email\").touched && ctx.loginForm.get(\"email\").invalid);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngIf\", ctx.loginForm.get(\"password\").touched && ctx.loginForm.get(\"password\").invalid);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n        }\n      },\n      dependencies: [i4.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n      styles: [\".align[_ngcontent-%COMP%]{\\n    text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGtCQUFrQjtBQUN0QiIsInNvdXJjZXNDb250ZW50IjpbIi5hbGlnbntcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"names":["FormGroup","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","LoginComponent","constructor","crudService","fb","router","loginForm","ngOnInit","initForm","userData","localStorage","getItem","console","log","navigate","group","email","required","password","onFormSubmit","getRawValue","loginUser","subscribe","data","setItem","isLoggedIn","next","ɵɵdirectiveInject","i1","CrudService","i2","FormBuilder","i3","Router","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵlistener","LoginComponent_Template_form_ngSubmit_1_listener","ɵɵelement","ɵɵtemplate","LoginComponent_span_7_Template","LoginComponent_span_14_Template","ɵɵadvance","ɵɵproperty","get","touched","invalid"],"sources":["C:\\Users\\DELL\\Desktop\\AKshay\\assignment\\test_UI\\src\\app\\login\\login.component.ts","C:\\Users\\DELL\\Desktop\\AKshay\\assignment\\test_UI\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CrudService } from '../crud.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  loginForm:any = FormGroup\n  constructor(private crudService:CrudService,public fb: FormBuilder,private router:Router){}\n  ngOnInit(): void {\n      this.initForm();\n      let userData = localStorage.getItem('user');\n      console.log(\"user\",userData)\n      if(userData) this.router.navigate(['products']);\n  }\n\n  initForm(){\n    this.loginForm = this.fb.group({\n      email: ['',[Validators.email,Validators.required]],\n      password:['',[Validators.required]],\n    })\n  }\n\nonFormSubmit(){\nconsole.log(this.loginForm.getRawValue());\nthis.crudService.loginUser({...this.loginForm.getRawValue()}).subscribe((data:any)=>{\n  console.log(data);\n  if(data){\n    localStorage.setItem('user',data.data);\n    this.crudService.isLoggedIn.next(true);\n    this.router.navigate(['products']);\n  }\n})\n}\n}\n","<div class=\"align_middle\">\n<form [formGroup]=\"loginForm\" (ngSubmit)=\"onFormSubmit()\">\n    <div class=\"row\" style=\"margin-top: 20px;;\">\n        <div class=\"col-sm-6 align\">Email:</div>\n        <div class=\"col-sm-6\"><input name=\"email\" id=\"email\" formControlName=\"email\"></div>\n        <span *ngIf=\"loginForm.get('email').touched && loginForm.get('email').invalid\">Please Enter valid Details</span>\n    </div><br>\n    <div class=\"row\">\n        <div class=\"col-sm-6 align\" >Password:</div>\n        <div class=\"col-sm-6\"><input name=\"password\" type=\"password\" id=\"password\" formControlName=\"password\"></div>\n        <span *ngIf=\"loginForm.get('password').touched && loginForm.get('password').invalid\">Please Enter valid Details</span>\n    </div><br>\n    \n    \n    \n \n    <div class=\"align\">\n        <button type=\"submit\" class=\"align\" [disabled]=\"loginForm.invalid\">Login</button>\n    </div>\n    \n    </form>\n</div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}